{"version":3,"sources":["../src/event-emitter.ts"],"sourcesContent":["export type EmitterEvent = {\n  [key: string]: any;\n  [key: number]: any;\n};\n\nexport type EventType<T extends EmitterEvent> = new (...args: any[]) => T;\nexport type EventListener<T extends EmitterEvent> = (event: T) => void;\ntype ListenerArray<T extends EmitterEvent> = Array<[EventListener<T>, boolean] | undefined>;\n\nexport class EventEmitter {\n  protected readonly listenerMap: Map<EventType<EmitterEvent>, ListenerArray<never>> = new Map();\n\n  public once<T extends EmitterEvent>(event: EventType<T>, listener: EventListener<T>): this {\n    return this.add(event, listener, true);\n  }\n\n  public on<T extends EmitterEvent>(event: EventType<T>, listener: EventListener<T>): this {\n    return this.add(event, listener);\n  }\n\n  public off<T extends EmitterEvent>(event: EventType<T>, listener?: EventListener<T>): this {\n    if (listener) {\n      const listeners = this.listenerMap.get(event);\n      if (listeners) {\n        const filtered = listeners.filter(entry => entry && entry[0] !== listener);\n        if (filtered.length > 0) {\n          this.listenerMap.set(event, filtered);\n        }\n        else {\n          this.listenerMap.delete(event);\n        }\n      }\n    }\n    else {\n      this.listenerMap.delete(event);\n    }\n    return this;\n  }\n\n  public emit<T extends EmitterEvent>(event: T): this {\n    const type = event.constructor as EventType<T>;\n    const listeners = this.listenerMap.get(type) as ListenerArray<T> | undefined;\n    if (listeners) {\n      const length = listeners.length;\n      for (let i = 0; i < length; i++) {\n        const entry = listeners[i];\n        if (!entry) {\n          continue;\n        }\n        if (entry[1]) {\n          listeners[i] = undefined;\n        }\n        entry[0](event);\n      }\n    }\n    return this;\n  }\n\n  public listeners<T extends EmitterEvent>(event: EventType<T>): EventListener<T>[] {\n    const listeners = this.listenerMap.get(event);\n    if (listeners) {\n      return listeners\n        .filter((entry): entry is [EventListener<T>, boolean] => !!entry)\n        .map(([li]) => li);\n    }\n    return [];\n  }\n\n  public events(): EventType<EmitterEvent>[] {\n    return Array.from(this.listenerMap.keys());\n  }\n\n  public clear(): this {\n    this.listenerMap.clear();\n    return this;\n  }\n\n  protected add<T extends EmitterEvent>(\n    event: EventType<T>,\n    listener: EventListener<T>,\n    once: boolean = false,\n  ): this {\n    const listeners = this.listenerMap.get(event);\n    if (listeners) {\n      const filtered = listeners.filter(ev => ev && ev[0] !== listener);\n      this.listenerMap.set(event, [...filtered, [listener, once]]);\n    }\n    else {\n      this.listenerMap.set(event, [[listener, once]]);\n    }\n    return this;\n  }\n}\n"],"mappings":";AASO,IAAM,eAAN,MAAmB;AAAA,EAAnB;AACL,SAAmB,cAAkE,oBAAI,IAAI;AAAA;AAAA,EAEtF,KAA6B,OAAqB,UAAkC;AACzF,WAAO,KAAK,IAAI,OAAO,UAAU,IAAI;AAAA,EACvC;AAAA,EAEO,GAA2B,OAAqB,UAAkC;AACvF,WAAO,KAAK,IAAI,OAAO,QAAQ;AAAA,EACjC;AAAA,EAEO,IAA4B,OAAqB,UAAmC;AACzF,QAAI,UAAU;AACZ,YAAM,YAAY,KAAK,YAAY,IAAI,KAAK;AAC5C,UAAI,WAAW;AACb,cAAM,WAAW,UAAU,OAAO,WAAS,SAAS,MAAM,CAAC,MAAM,QAAQ;AACzE,YAAI,SAAS,SAAS,GAAG;AACvB,eAAK,YAAY,IAAI,OAAO,QAAQ;AAAA,QACtC,OACK;AACH,eAAK,YAAY,OAAO,KAAK;AAAA,QAC/B;AAAA,MACF;AAAA,IACF,OACK;AACH,WAAK,YAAY,OAAO,KAAK;AAAA,IAC/B;AACA,WAAO;AAAA,EACT;AAAA,EAEO,KAA6B,OAAgB;AAClD,UAAM,OAAO,MAAM;AACnB,UAAM,YAAY,KAAK,YAAY,IAAI,IAAI;AAC3C,QAAI,WAAW;AACb,YAAM,SAAS,UAAU;AACzB,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,cAAM,QAAQ,UAAU,CAAC;AACzB,YAAI,CAAC,OAAO;AACV;AAAA,QACF;AACA,YAAI,MAAM,CAAC,GAAG;AACZ,oBAAU,CAAC,IAAI;AAAA,QACjB;AACA,cAAM,CAAC,EAAE,KAAK;AAAA,MAChB;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EAEO,UAAkC,OAAyC;AAChF,UAAM,YAAY,KAAK,YAAY,IAAI,KAAK;AAC5C,QAAI,WAAW;AACb,aAAO,UACJ,OAAO,CAAC,UAAgD,CAAC,CAAC,KAAK,EAC/D,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE;AAAA,IACrB;AACA,WAAO,CAAC;AAAA,EACV;AAAA,EAEO,SAAoC;AACzC,WAAO,MAAM,KAAK,KAAK,YAAY,KAAK,CAAC;AAAA,EAC3C;AAAA,EAEO,QAAc;AACnB,SAAK,YAAY,MAAM;AACvB,WAAO;AAAA,EACT;AAAA,EAEU,IACR,OACA,UACA,OAAgB,OACV;AACN,UAAM,YAAY,KAAK,YAAY,IAAI,KAAK;AAC5C,QAAI,WAAW;AACb,YAAM,WAAW,UAAU,OAAO,QAAM,MAAM,GAAG,CAAC,MAAM,QAAQ;AAChE,WAAK,YAAY,IAAI,OAAO,CAAC,GAAG,UAAU,CAAC,UAAU,IAAI,CAAC,CAAC;AAAA,IAC7D,OACK;AACH,WAAK,YAAY,IAAI,OAAO,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC;AAAA,IAChD;AACA,WAAO;AAAA,EACT;AACF;","names":[]}